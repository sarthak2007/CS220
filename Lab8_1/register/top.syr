Release 14.7 - xst P.20131013 (lin64)
Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
--> 
Parameter TMPDIR set to xst/projnav.tmp


Total REAL time to Xst completion: 1.00 secs
Total CPU time to Xst completion: 0.06 secs
 
--> 
Parameter xsthdpdir set to xst


Total REAL time to Xst completion: 1.00 secs
Total CPU time to Xst completion: 0.06 secs
 
--> 
Reading design: top.prj

TABLE OF CONTENTS
  1) Synthesis Options Summary
  2) HDL Compilation
  3) Design Hierarchy Analysis
  4) HDL Analysis
  5) HDL Synthesis
     5.1) HDL Synthesis Report
  6) Advanced HDL Synthesis
     6.1) Advanced HDL Synthesis Report
  7) Low Level Synthesis
  8) Partition Report
  9) Final Report
	9.1) Device utilization summary
	9.2) Partition Resource Summary
	9.3) TIMING REPORT


=========================================================================
*                      Synthesis Options Summary                        *
=========================================================================
---- Source Parameters
Input File Name                    : "top.prj"
Input Format                       : mixed
Ignore Synthesis Constraint File   : NO

---- Target Parameters
Output File Name                   : "top"
Output Format                      : NGC
Target Device                      : xc3s500e-4-fg320

---- Source Options
Top Module Name                    : top
Automatic FSM Extraction           : YES
FSM Encoding Algorithm             : Auto
Safe Implementation                : No
FSM Style                          : LUT
RAM Extraction                     : Yes
RAM Style                          : Auto
ROM Extraction                     : Yes
Mux Style                          : Auto
Decoder Extraction                 : YES
Priority Encoder Extraction        : Yes
Shift Register Extraction          : YES
Logical Shifter Extraction         : YES
XOR Collapsing                     : YES
ROM Style                          : Auto
Mux Extraction                     : Yes
Resource Sharing                   : YES
Asynchronous To Synchronous        : NO
Multiplier Style                   : Auto
Automatic Register Balancing       : No

---- Target Options
Add IO Buffers                     : YES
Global Maximum Fanout              : 100000
Add Generic Clock Buffer(BUFG)     : 24
Register Duplication               : YES
Slice Packing                      : YES
Optimize Instantiated Primitives   : NO
Use Clock Enable                   : Yes
Use Synchronous Set                : Yes
Use Synchronous Reset              : Yes
Pack IO Registers into IOBs        : Auto
Equivalent register Removal        : YES

---- General Options
Optimization Goal                  : Speed
Optimization Effort                : 1
Keep Hierarchy                     : No
Netlist Hierarchy                  : As_Optimized
RTL Output                         : Yes
Global Optimization                : AllClockNets
Read Cores                         : YES
Write Timing Constraints           : NO
Cross Clock Analysis               : NO
Hierarchy Separator                : /
Bus Delimiter                      : <>
Case Specifier                     : Maintain
Slice Utilization Ratio            : 100
BRAM Utilization Ratio             : 100
Verilog 2001                       : YES
Auto BRAM Packing                  : NO
Slice Utilization Ratio Delta      : 5

=========================================================================


=========================================================================
*                          HDL Compilation                              *
=========================================================================
Compiling verilog file "rot_event.v" in library work
Compiling verilog file "regist.v" in library work
Module <rot_event> compiled
Compiling verilog file "driver.v" in library work
Module <regist> compiled
Compiling verilog file "top.v" in library work
Module <driver> compiled
Module <top> compiled
No errors in compilation
Analysis of file <"top.prj"> succeeded.
 

=========================================================================
*                     Design Hierarchy Analysis                         *
=========================================================================
Analyzing hierarchy for module <top> in library <work>.

Analyzing hierarchy for module <rot_event> in library <work>.

Analyzing hierarchy for module <regist> in library <work>.

Analyzing hierarchy for module <driver> in library <work>.


=========================================================================
*                            HDL Analysis                               *
=========================================================================
Analyzing top module <top>.
Module <top> is correct for synthesis.
 
Analyzing module <rot_event> in library <work>.
Module <rot_event> is correct for synthesis.
 
Analyzing module <regist> in library <work>.
Module <regist> is correct for synthesis.
 
Analyzing module <driver> in library <work>.
WARNING:Xst:790 - "driver.v" line 224: Index value(s) does not match array range, simulation mismatch.
WARNING:Xst:790 - "driver.v" line 234: Index value(s) does not match array range, simulation mismatch.
WARNING:Xst:790 - "driver.v" line 282: Index value(s) does not match array range, simulation mismatch.
WARNING:Xst:790 - "driver.v" line 292: Index value(s) does not match array range, simulation mismatch.
Module <driver> is correct for synthesis.
 

=========================================================================
*                           HDL Synthesis                               *
=========================================================================

Performing bidirectional port resolution...
INFO:Xst:2679 - Register <first<127>> in unit <regist> has a constant value of 0 during circuit operation. The register is replaced by logic.
INFO:Xst:2679 - Register <first<126>> in unit <regist> has a constant value of 0 during circuit operation. The register is replaced by logic.
INFO:Xst:2679 - Register <first<119>> in unit <regist> has a constant value of 0 during circuit operation. The register is replaced by logic.
INFO:Xst:2679 - Register <first<118>> in unit <regist> has a constant value of 0 during circuit operation. The register is replaced by logic.
INFO:Xst:2679 - Register <first<111>> in unit <regist> has a constant value of 0 during circuit operation. The register is replaced by logic.
INFO:Xst:2679 - Register <first<110>> in unit <regist> has a constant value of 0 during circuit operation. The register is replaced by logic.
INFO:Xst:2679 - Register <first<103>> in unit <regist> has a constant value of 0 during circuit operation. The register is replaced by logic.
INFO:Xst:2679 - Register <first<102>> in unit <regist> has a constant value of 0 during circuit operation. The register is replaced by logic.
INFO:Xst:2679 - Register <first<95>> in unit <regist> has a constant value of 0 during circuit operation. The register is replaced by logic.
INFO:Xst:2679 - Register <first<94>> in unit <regist> has a constant value of 0 during circuit operation. The register is replaced by logic.
INFO:Xst:2679 - Register <first<87>> in unit <regist> has a constant value of 0 during circuit operation. The register is replaced by logic.
INFO:Xst:2679 - Register <first<86>> in unit <regist> has a constant value of 0 during circuit operation. The register is replaced by logic.
INFO:Xst:2679 - Register <first<79>> in unit <regist> has a constant value of 0 during circuit operation. The register is replaced by logic.
INFO:Xst:2679 - Register <first<78>> in unit <regist> has a constant value of 0 during circuit operation. The register is replaced by logic.
INFO:Xst:2679 - Register <first<71>> in unit <regist> has a constant value of 0 during circuit operation. The register is replaced by logic.
INFO:Xst:2679 - Register <first<70>> in unit <regist> has a constant value of 0 during circuit operation. The register is replaced by logic.
INFO:Xst:2679 - Register <first<63>> in unit <regist> has a constant value of 0 during circuit operation. The register is replaced by logic.
INFO:Xst:2679 - Register <first<62>> in unit <regist> has a constant value of 0 during circuit operation. The register is replaced by logic.
INFO:Xst:2679 - Register <first<55>> in unit <regist> has a constant value of 0 during circuit operation. The register is replaced by logic.
INFO:Xst:2679 - Register <first<54>> in unit <regist> has a constant value of 0 during circuit operation. The register is replaced by logic.
INFO:Xst:2679 - Register <first<47>> in unit <regist> has a constant value of 0 during circuit operation. The register is replaced by logic.
INFO:Xst:2679 - Register <first<46>> in unit <regist> has a constant value of 0 during circuit operation. The register is replaced by logic.
INFO:Xst:2679 - Register <first<39>> in unit <regist> has a constant value of 0 during circuit operation. The register is replaced by logic.
INFO:Xst:2679 - Register <first<38>> in unit <regist> has a constant value of 0 during circuit operation. The register is replaced by logic.
INFO:Xst:2679 - Register <first<31>> in unit <regist> has a constant value of 0 during circuit operation. The register is replaced by logic.
INFO:Xst:2679 - Register <first<30>> in unit <regist> has a constant value of 0 during circuit operation. The register is replaced by logic.
INFO:Xst:2679 - Register <first<23>> in unit <regist> has a constant value of 0 during circuit operation. The register is replaced by logic.
INFO:Xst:2679 - Register <first<22>> in unit <regist> has a constant value of 0 during circuit operation. The register is replaced by logic.
INFO:Xst:2679 - Register <first<15>> in unit <regist> has a constant value of 0 during circuit operation. The register is replaced by logic.
INFO:Xst:2679 - Register <first<14>> in unit <regist> has a constant value of 0 during circuit operation. The register is replaced by logic.
INFO:Xst:2679 - Register <first<7>> in unit <regist> has a constant value of 0 during circuit operation. The register is replaced by logic.
INFO:Xst:2679 - Register <first<6>> in unit <regist> has a constant value of 0 during circuit operation. The register is replaced by logic.
INFO:Xst:2679 - Register <second<127>> in unit <regist> has a constant value of 0 during circuit operation. The register is replaced by logic.
INFO:Xst:2679 - Register <second<126>> in unit <regist> has a constant value of 0 during circuit operation. The register is replaced by logic.
INFO:Xst:2679 - Register <second<119>> in unit <regist> has a constant value of 0 during circuit operation. The register is replaced by logic.
INFO:Xst:2679 - Register <second<118>> in unit <regist> has a constant value of 0 during circuit operation. The register is replaced by logic.
INFO:Xst:2679 - Register <second<111>> in unit <regist> has a constant value of 0 during circuit operation. The register is replaced by logic.
INFO:Xst:2679 - Register <second<110>> in unit <regist> has a constant value of 0 during circuit operation. The register is replaced by logic.
INFO:Xst:2679 - Register <second<103>> in unit <regist> has a constant value of 0 during circuit operation. The register is replaced by logic.
INFO:Xst:2679 - Register <second<102>> in unit <regist> has a constant value of 0 during circuit operation. The register is replaced by logic.
INFO:Xst:2679 - Register <second<95>> in unit <regist> has a constant value of 0 during circuit operation. The register is replaced by logic.
INFO:Xst:2679 - Register <second<94>> in unit <regist> has a constant value of 0 during circuit operation. The register is replaced by logic.
INFO:Xst:2679 - Register <second<87>> in unit <regist> has a constant value of 0 during circuit operation. The register is replaced by logic.
INFO:Xst:2679 - Register <second<86>> in unit <regist> has a constant value of 0 during circuit operation. The register is replaced by logic.
INFO:Xst:2679 - Register <second<79>> in unit <regist> has a constant value of 0 during circuit operation. The register is replaced by logic.
INFO:Xst:2679 - Register <second<78>> in unit <regist> has a constant value of 0 during circuit operation. The register is replaced by logic.
INFO:Xst:2679 - Register <second<71>> in unit <regist> has a constant value of 0 during circuit operation. The register is replaced by logic.
INFO:Xst:2679 - Register <second<70>> in unit <regist> has a constant value of 0 during circuit operation. The register is replaced by logic.
INFO:Xst:2679 - Register <second<63>> in unit <regist> has a constant value of 0 during circuit operation. The register is replaced by logic.
INFO:Xst:2679 - Register <second<62>> in unit <regist> has a constant value of 0 during circuit operation. The register is replaced by logic.
INFO:Xst:2679 - Register <second<55>> in unit <regist> has a constant value of 0 during circuit operation. The register is replaced by logic.
INFO:Xst:2679 - Register <second<54>> in unit <regist> has a constant value of 0 during circuit operation. The register is replaced by logic.
INFO:Xst:2679 - Register <second<47>> in unit <regist> has a constant value of 0 during circuit operation. The register is replaced by logic.
INFO:Xst:2679 - Register <second<46>> in unit <regist> has a constant value of 0 during circuit operation. The register is replaced by logic.
INFO:Xst:2679 - Register <second<39>> in unit <regist> has a constant value of 0 during circuit operation. The register is replaced by logic.
INFO:Xst:2679 - Register <second<38>> in unit <regist> has a constant value of 0 during circuit operation. The register is replaced by logic.
INFO:Xst:2679 - Register <second<31>> in unit <regist> has a constant value of 0 during circuit operation. The register is replaced by logic.
INFO:Xst:2679 - Register <second<30>> in unit <regist> has a constant value of 0 during circuit operation. The register is replaced by logic.
INFO:Xst:2679 - Register <second<23>> in unit <regist> has a constant value of 0 during circuit operation. The register is replaced by logic.
INFO:Xst:2679 - Register <second<22>> in unit <regist> has a constant value of 0 during circuit operation. The register is replaced by logic.
INFO:Xst:2679 - Register <second<15>> in unit <regist> has a constant value of 0 during circuit operation. The register is replaced by logic.
INFO:Xst:2679 - Register <second<14>> in unit <regist> has a constant value of 0 during circuit operation. The register is replaced by logic.
INFO:Xst:2679 - Register <second<7>> in unit <regist> has a constant value of 0 during circuit operation. The register is replaced by logic.
INFO:Xst:2679 - Register <second<6>> in unit <regist> has a constant value of 0 during circuit operation. The register is replaced by logic.
INFO:Xst:2679 - Register <LCD_W> in unit <driver> has a constant value of 0 during circuit operation. The register is replaced by logic.

Synthesizing Unit <rot_event>.
    Related source file is "rot_event.v".
    Found 1-bit register for signal <rot_event>.
    Summary:
	inferred   1 D-type flip-flop(s).
Unit <rot_event> synthesized.


Synthesizing Unit <regist>.
    Related source file is "regist.v".
    Found 11-bit register for signal <cnt>.
    Found 6-bit register for signal <first<125:120>>.
    Found 6-bit register for signal <first<117:112>>.
    Found 6-bit register for signal <first<109:104>>.
    Found 6-bit register for signal <first<101:96>>.
    Found 6-bit register for signal <first<93:88>>.
    Found 6-bit register for signal <first<85:80>>.
    Found 6-bit register for signal <first<77:72>>.
    Found 6-bit register for signal <first<69:64>>.
    Found 6-bit register for signal <first<61:56>>.
    Found 6-bit register for signal <first<53:48>>.
    Found 6-bit register for signal <first<45:40>>.
    Found 6-bit register for signal <first<37:32>>.
    Found 6-bit register for signal <first<29:24>>.
    Found 6-bit register for signal <first<21:16>>.
    Found 6-bit register for signal <first<13:8>>.
    Found 6-bit register for signal <first<5:0>>.
    Found 6-bit register for signal <second<125:120>>.
    Found 6-bit register for signal <second<117:112>>.
    Found 6-bit register for signal <second<109:104>>.
    Found 6-bit register for signal <second<101:96>>.
    Found 6-bit register for signal <second<93:88>>.
    Found 6-bit register for signal <second<85:80>>.
    Found 6-bit register for signal <second<77:72>>.
    Found 6-bit register for signal <second<69:64>>.
    Found 6-bit register for signal <second<61:56>>.
    Found 6-bit register for signal <second<53:48>>.
    Found 6-bit register for signal <second<45:40>>.
    Found 6-bit register for signal <second<37:32>>.
    Found 6-bit register for signal <second<29:24>>.
    Found 6-bit register for signal <second<21:16>>.
    Found 6-bit register for signal <second<13:8>>.
    Found 6-bit register for signal <second<5:0>>.
    Found 3-bit register for signal <inst>.
    Found 16-bit register for signal <a>.
    Found 16-bit 8-to-1 multiplexer for signal <a$mux0000>.
    Found 16-bit register for signal <b>.
    Found 16-bit 8-to-1 multiplexer for signal <b$mux0000>.
    Found 16-bit register for signal <c>.
    Found 16-bit addsub for signal <c$addsub0000>.
    Found 16-bit 8-to-1 multiplexer for signal <c$mux0000>.
    Found 16-bit shifter logical left for signal <c$shift0000> created at line 512.
    Found 1-bit 8-to-1 multiplexer for signal <first_0$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <first_1$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <first_10$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <first_100$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <first_101$mux0000>.
    Found 6-bit adder for signal <first_103_96$add0000> created at line 88.
    Found 6-bit adder for signal <first_103_96$add0001> created at line 132.
    Found 1-bit 8-to-1 multiplexer for signal <first_104$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <first_105$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <first_106$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <first_107$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <first_108$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <first_109$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <first_11$mux0000>.
    Found 6-bit adder for signal <first_111_104$add0000> created at line 87.
    Found 6-bit adder for signal <first_111_104$add0001> created at line 131.
    Found 1-bit 8-to-1 multiplexer for signal <first_112$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <first_113$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <first_114$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <first_115$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <first_116$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <first_117$mux0000>.
    Found 6-bit adder for signal <first_119_112$add0000> created at line 86.
    Found 6-bit adder for signal <first_119_112$add0001> created at line 130.
    Found 1-bit 8-to-1 multiplexer for signal <first_12$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <first_120$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <first_121$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <first_122$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <first_123$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <first_124$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <first_125$mux0000>.
    Found 6-bit adder for signal <first_127_120$add0000> created at line 85.
    Found 6-bit adder for signal <first_127_120$add0001> created at line 129.
    Found 1-bit 8-to-1 multiplexer for signal <first_13$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <first_16$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <first_17$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <first_18$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <first_19$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <first_2$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <first_20$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <first_21$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <first_24$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <first_25$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <first_26$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <first_27$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <first_28$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <first_29$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <first_3$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <first_32$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <first_33$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <first_34$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <first_35$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <first_36$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <first_37$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <first_4$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <first_40$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <first_41$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <first_42$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <first_43$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <first_44$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <first_45$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <first_48$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <first_49$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <first_5$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <first_50$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <first_51$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <first_52$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <first_53$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <first_56$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <first_57$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <first_58$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <first_59$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <first_60$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <first_61$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <first_64$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <first_65$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <first_66$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <first_67$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <first_68$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <first_69$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <first_72$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <first_73$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <first_74$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <first_75$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <first_76$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <first_77$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <first_8$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <first_80$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <first_81$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <first_82$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <first_83$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <first_84$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <first_85$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <first_88$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <first_89$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <first_9$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <first_90$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <first_91$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <first_92$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <first_93$mux0000>.
    Found 6-bit adder for signal <first_95_88$add0000> created at line 89.
    Found 6-bit adder for signal <first_95_88$add0001> created at line 133.
    Found 1-bit 8-to-1 multiplexer for signal <first_96$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <first_97$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <first_98$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <first_99$mux0000>.
    Found 1-bit register for signal <prev>.
    Found 5-bit register for signal <read_add1>.
    Found 1-bit 8-to-1 multiplexer for signal <read_add1_0$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <read_add1_1$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <read_add1_2$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <read_add1_3$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <read_add1_4$mux0000>.
    Found 5-bit register for signal <read_add2>.
    Found 1-bit 8-to-1 multiplexer for signal <read_add2_0$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <read_add2_1$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <read_add2_2$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <read_add2_3$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <read_add2_4$mux0000>.
    Found 512-bit register for signal <regist>.
    Found 16-bit 8-to-1 multiplexer for signal <regist_0$mux0000>.
    Found 16-bit 8-to-1 multiplexer for signal <regist_1$mux0000>.
    Found 16-bit 8-to-1 multiplexer for signal <regist_10$mux0000>.
    Found 16-bit 8-to-1 multiplexer for signal <regist_11$mux0000>.
    Found 16-bit 8-to-1 multiplexer for signal <regist_12$mux0000>.
    Found 16-bit 8-to-1 multiplexer for signal <regist_13$mux0000>.
    Found 16-bit 8-to-1 multiplexer for signal <regist_14$mux0000>.
    Found 16-bit 8-to-1 multiplexer for signal <regist_15$mux0000>.
    Found 16-bit 8-to-1 multiplexer for signal <regist_16$mux0000>.
    Found 16-bit 8-to-1 multiplexer for signal <regist_17$mux0000>.
    Found 16-bit 8-to-1 multiplexer for signal <regist_18$mux0000>.
    Found 16-bit 8-to-1 multiplexer for signal <regist_19$mux0000>.
    Found 16-bit 8-to-1 multiplexer for signal <regist_2$mux0000>.
    Found 16-bit 8-to-1 multiplexer for signal <regist_20$mux0000>.
    Found 16-bit 8-to-1 multiplexer for signal <regist_21$mux0000>.
    Found 16-bit 8-to-1 multiplexer for signal <regist_22$mux0000>.
    Found 16-bit 8-to-1 multiplexer for signal <regist_23$mux0000>.
    Found 16-bit 8-to-1 multiplexer for signal <regist_24$mux0000>.
    Found 16-bit 8-to-1 multiplexer for signal <regist_25$mux0000>.
    Found 16-bit 8-to-1 multiplexer for signal <regist_26$mux0000>.
    Found 16-bit 8-to-1 multiplexer for signal <regist_27$mux0000>.
    Found 16-bit 8-to-1 multiplexer for signal <regist_28$mux0000>.
    Found 16-bit 8-to-1 multiplexer for signal <regist_29$mux0000>.
    Found 16-bit 8-to-1 multiplexer for signal <regist_3$mux0000>.
    Found 16-bit 8-to-1 multiplexer for signal <regist_30$mux0000>.
    Found 16-bit 8-to-1 multiplexer for signal <regist_31$mux0000>.
    Found 16-bit 8-to-1 multiplexer for signal <regist_4$mux0000>.
    Found 16-bit 8-to-1 multiplexer for signal <regist_5$mux0000>.
    Found 16-bit 8-to-1 multiplexer for signal <regist_6$mux0000>.
    Found 16-bit 8-to-1 multiplexer for signal <regist_7$mux0000>.
    Found 16-bit 8-to-1 multiplexer for signal <regist_8$mux0000>.
    Found 16-bit 8-to-1 multiplexer for signal <regist_9$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <second_0$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <second_1$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <second_10$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <second_100$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <second_101$mux0000>.
    Found 6-bit adder for signal <second_103_96$add0000> created at line 94.
    Found 6-bit adder for signal <second_103_96$add0001> created at line 138.
    Found 6-bit adder for signal <second_103_96$add0002> created at line 201.
    Found 6-bit adder for signal <second_103_96$add0003> created at line 411.
    Found 1-bit 8-to-1 multiplexer for signal <second_104$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <second_105$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <second_106$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <second_107$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <second_108$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <second_109$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <second_11$mux0000>.
    Found 6-bit adder for signal <second_111_104$add0000> created at line 93.
    Found 6-bit adder for signal <second_111_104$add0001> created at line 137.
    Found 6-bit adder for signal <second_111_104$add0002> created at line 200.
    Found 6-bit adder for signal <second_111_104$add0003> created at line 410.
    Found 1-bit 8-to-1 multiplexer for signal <second_112$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <second_113$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <second_114$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <second_115$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <second_116$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <second_117$mux0000>.
    Found 6-bit adder for signal <second_119_112$add0000> created at line 92.
    Found 6-bit adder for signal <second_119_112$add0001> created at line 136.
    Found 6-bit adder for signal <second_119_112$add0002> created at line 199.
    Found 6-bit adder for signal <second_119_112$add0003> created at line 409.
    Found 1-bit 8-to-1 multiplexer for signal <second_12$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <second_120$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <second_121$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <second_122$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <second_123$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <second_124$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <second_125$mux0000>.
    Found 6-bit adder for signal <second_127_120$add0000> created at line 91.
    Found 6-bit adder for signal <second_127_120$add0001> created at line 135.
    Found 6-bit adder for signal <second_127_120$add0002> created at line 198.
    Found 6-bit adder for signal <second_127_120$add0003> created at line 408.
    Found 1-bit 8-to-1 multiplexer for signal <second_13$mux0000>.
    Found 6-bit adder for signal <second_15_8$add0000> created at line 105.
    Found 6-bit adder for signal <second_15_8$add0001> created at line 149.
    Found 6-bit adder for signal <second_15_8$add0002> created at line 212.
    Found 6-bit adder for signal <second_15_8$add0003> created at line 422.
    Found 1-bit 8-to-1 multiplexer for signal <second_16$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <second_17$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <second_18$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <second_19$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <second_2$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <second_20$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <second_21$mux0000>.
    Found 6-bit adder for signal <second_23_16$add0000> created at line 104.
    Found 6-bit adder for signal <second_23_16$add0001> created at line 148.
    Found 6-bit adder for signal <second_23_16$add0002> created at line 211.
    Found 6-bit adder for signal <second_23_16$add0003> created at line 421.
    Found 1-bit 8-to-1 multiplexer for signal <second_24$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <second_25$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <second_26$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <second_27$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <second_28$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <second_29$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <second_3$mux0000>.
    Found 6-bit adder for signal <second_31_24$add0000> created at line 103.
    Found 6-bit adder for signal <second_31_24$add0001> created at line 147.
    Found 6-bit adder for signal <second_31_24$add0002> created at line 210.
    Found 6-bit adder for signal <second_31_24$add0003> created at line 420.
    Found 1-bit 8-to-1 multiplexer for signal <second_32$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <second_33$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <second_34$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <second_35$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <second_36$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <second_37$mux0000>.
    Found 6-bit adder for signal <second_39_32$add0000> created at line 102.
    Found 6-bit adder for signal <second_39_32$add0001> created at line 146.
    Found 6-bit adder for signal <second_39_32$add0002> created at line 209.
    Found 6-bit adder for signal <second_39_32$add0003> created at line 419.
    Found 1-bit 8-to-1 multiplexer for signal <second_4$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <second_40$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <second_41$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <second_42$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <second_43$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <second_44$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <second_45$mux0000>.
    Found 6-bit adder for signal <second_47_40$add0000> created at line 101.
    Found 6-bit adder for signal <second_47_40$add0001> created at line 145.
    Found 6-bit adder for signal <second_47_40$add0002> created at line 208.
    Found 6-bit adder for signal <second_47_40$add0003> created at line 418.
    Found 1-bit 8-to-1 multiplexer for signal <second_48$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <second_49$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <second_5$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <second_50$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <second_51$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <second_52$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <second_53$mux0000>.
    Found 6-bit adder for signal <second_55_48$add0000> created at line 100.
    Found 6-bit adder for signal <second_55_48$add0001> created at line 144.
    Found 6-bit adder for signal <second_55_48$add0002> created at line 207.
    Found 6-bit adder for signal <second_55_48$add0003> created at line 417.
    Found 1-bit 8-to-1 multiplexer for signal <second_56$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <second_57$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <second_58$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <second_59$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <second_60$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <second_61$mux0000>.
    Found 6-bit adder for signal <second_63_56$add0000> created at line 99.
    Found 6-bit adder for signal <second_63_56$add0001> created at line 143.
    Found 6-bit adder for signal <second_63_56$add0002> created at line 206.
    Found 6-bit adder for signal <second_63_56$add0003> created at line 416.
    Found 1-bit 8-to-1 multiplexer for signal <second_64$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <second_65$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <second_66$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <second_67$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <second_68$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <second_69$mux0000>.
    Found 6-bit adder for signal <second_71_64$add0000> created at line 98.
    Found 6-bit adder for signal <second_71_64$add0001> created at line 142.
    Found 6-bit adder for signal <second_71_64$add0002> created at line 205.
    Found 6-bit adder for signal <second_71_64$add0003> created at line 415.
    Found 1-bit 8-to-1 multiplexer for signal <second_72$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <second_73$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <second_74$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <second_75$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <second_76$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <second_77$mux0000>.
    Found 6-bit adder for signal <second_79_72$add0000> created at line 97.
    Found 6-bit adder for signal <second_79_72$add0001> created at line 141.
    Found 6-bit adder for signal <second_79_72$add0002> created at line 204.
    Found 6-bit adder for signal <second_79_72$add0003> created at line 414.
    Found 6-bit adder for signal <second_7_0$add0000> created at line 106.
    Found 6-bit adder for signal <second_7_0$add0001> created at line 150.
    Found 6-bit adder for signal <second_7_0$add0002> created at line 213.
    Found 6-bit adder for signal <second_7_0$add0003> created at line 423.
    Found 1-bit 8-to-1 multiplexer for signal <second_8$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <second_80$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <second_81$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <second_82$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <second_83$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <second_84$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <second_85$mux0000>.
    Found 6-bit adder for signal <second_87_80$add0000> created at line 96.
    Found 6-bit adder for signal <second_87_80$add0001> created at line 140.
    Found 6-bit adder for signal <second_87_80$add0002> created at line 203.
    Found 6-bit adder for signal <second_87_80$add0003> created at line 413.
    Found 1-bit 8-to-1 multiplexer for signal <second_88$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <second_89$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <second_9$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <second_90$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <second_91$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <second_92$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <second_93$mux0000>.
    Found 6-bit adder for signal <second_95_88$add0000> created at line 95.
    Found 6-bit adder for signal <second_95_88$add0001> created at line 139.
    Found 6-bit adder for signal <second_95_88$add0002> created at line 202.
    Found 6-bit adder for signal <second_95_88$add0003> created at line 412.
    Found 1-bit 8-to-1 multiplexer for signal <second_96$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <second_97$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <second_98$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <second_99$mux0000>.
    Found 4-bit register for signal <shift>.
    Found 5-bit register for signal <write_add>.
    Found 1-bit 8-to-1 multiplexer for signal <write_add_0$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <write_add_1$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <write_add_2$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <write_add_3$mux0000>.
    Found 1-bit 8-to-1 multiplexer for signal <write_add_4$mux0000>.
    Found 16-bit register for signal <write_data>.
INFO:Xst:738 - HDL ADVISOR - 512 flip-flops were inferred for signal <regist>. You may be trying to describe a RAM in a way that is incompatible with block and distributed RAM resources available on Xilinx devices, or with a specific template that is not supported. Please review the Xilinx resources documentation and the XST user manual for coding guidelines. Taking advantage of RAM resources will lead to improved device usage and reduced synthesis time.
    Summary:
	inferred 802 D-type flip-flop(s).
	inferred  75 Adder/Subtractor(s).
	inferred 799 Multiplexer(s).
	inferred   1 Combinational logic shifter(s).
Unit <regist> synthesized.


Synthesizing Unit <driver>.
    Related source file is "driver.v".
    Found finite state machine <FSM_0> for signal <local>.
    -----------------------------------------------------------------------
    | States             | 6                                              |
    | Transitions        | 122                                            |
    | Inputs             | 11                                             |
    | Outputs            | 8                                              |
    | Clock              | clk                       (rising_edge)        |
    | Clock enable       | local$or0000              (positive)           |
    | Power Up State     | 000000                                         |
    | Encoding           | automatic                                      |
    | Implementation     | LUT                                            |
    -----------------------------------------------------------------------
    Found finite state machine <FSM_1> for signal <state>.
    -----------------------------------------------------------------------
    | States             | 9                                              |
    | Transitions        | 28                                             |
    | Inputs             | 5                                              |
    | Outputs            | 9                                              |
    | Clock              | clk                       (rising_edge)        |
    | Clock enable       | local$or0000              (positive)           |
    | Power Up State     | 000001                                         |
    | Encoding           | automatic                                      |
    | Implementation     | LUT                                            |
    -----------------------------------------------------------------------
    Found 1-bit register for signal <LCD_E>.
    Found 1-bit register for signal <LCD_RS>.
    Found 4-bit register for signal <data>.
    Found 26-bit up counter for signal <cnt>.
    Found 26-bit adder for signal <cnt$share0000>.
    Found 6-bit register for signal <count>.
    Found 6-bit adder for signal <count$addsub0000>.
    Found 9-bit register for signal <pos>.
    Found 9-bit subtractor for signal <pos$share0000>.
    Found 9-bit register for signal <pos1>.
    Found 9-bit subtractor for signal <pos1$addsub0000> created at line 286.
    Found 3-bit register for signal <temp>.
    Found 3-bit adder for signal <temp$addsub0000> created at line 79.
    Summary:
	inferred   2 Finite State Machine(s).
	inferred   1 Counter(s).
	inferred  33 D-type flip-flop(s).
	inferred   5 Adder/Subtractor(s).
Unit <driver> synthesized.


Synthesizing Unit <top>.
    Related source file is "top.v".
Unit <top> synthesized.

INFO:Xst:1767 - HDL ADVISOR - Resource sharing has identified that some arithmetic operations in this design can share the same physical resources for reduced device utilization. For improved clock frequency you may try to disable resource sharing.

=========================================================================
HDL Synthesis Report

Macro Statistics
# Adders/Subtractors                                   : 80
 16-bit addsub                                         : 1
 26-bit adder                                          : 1
 3-bit adder                                           : 1
 6-bit adder                                           : 75
 9-bit subtractor                                      : 2
# Counters                                             : 1
 26-bit up counter                                     : 1
# Registers                                            : 270
 1-bit register                                        : 227
 11-bit register                                       : 1
 16-bit register                                       : 35
 3-bit register                                        : 2
 4-bit register                                        : 2
 6-bit register                                        : 1
 9-bit register                                        : 2
# Multiplexers                                         : 244
 1-bit 8-to-1 multiplexer                              : 207
 16-bit 32-to-1 multiplexer                            : 2
 16-bit 8-to-1 multiplexer                             : 35
# Logic shifters                                       : 1
 16-bit shifter logical left                           : 1

=========================================================================

=========================================================================
*                       Advanced HDL Synthesis                          *
=========================================================================

Analyzing FSM <FSM_1> for best encoding.
Optimizing FSM <de/state/FSM> on signal <state[1:4]> with sequential encoding.
--------------------
 State  | Encoding
--------------------
 000001 | 0000
 000010 | 0001
 000011 | 0010
 000100 | 0011
 000101 | 0100
 000110 | 0101
 000111 | 0110
 001000 | 0111
 001001 | 1000
--------------------
Analyzing FSM <FSM_0> for best encoding.
Optimizing FSM <de/local/FSM> on signal <local[1:6]> with one-hot encoding.
--------------------
 State  | Encoding
--------------------
 000000 | 000001
 000001 | 000010
 000010 | 000100
 000011 | 001000
 000100 | 010000
 000101 | 100000
--------------------

=========================================================================
Advanced HDL Synthesis Report

Macro Statistics
# FSMs                                                 : 2
# Adders/Subtractors                                   : 80
 16-bit addsub                                         : 1
 26-bit adder                                          : 1
 3-bit adder                                           : 1
 6-bit adder                                           : 75
 9-bit subtractor                                      : 2
# Counters                                             : 1
 26-bit up counter                                     : 1
# Registers                                            : 836
 Flip-Flops                                            : 836
# Multiplexers                                         : 244
 1-bit 8-to-1 multiplexer                              : 207
 16-bit 32-to-1 multiplexer                            : 2
 16-bit 8-to-1 multiplexer                             : 35
# Logic shifters                                       : 1
 16-bit shifter logical left                           : 1

=========================================================================

=========================================================================
*                         Low Level Synthesis                           *
=========================================================================
WARNING:Xst:2677 - Node <pos_7> of sequential type is unconnected in block <driver>.
WARNING:Xst:2677 - Node <pos_8> of sequential type is unconnected in block <driver>.
WARNING:Xst:2677 - Node <pos1_7> of sequential type is unconnected in block <driver>.
WARNING:Xst:2677 - Node <pos1_8> of sequential type is unconnected in block <driver>.

Optimizing unit <top> ...

Optimizing unit <regist> ...
WARNING:Xst:1293 - FF/Latch <cnt_4> has a constant value of 0 in block <regist>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1896 - Due to other FF/Latch trimming, FF/Latch <cnt_5> has a constant value of 0 in block <regist>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1896 - Due to other FF/Latch trimming, FF/Latch <cnt_6> has a constant value of 0 in block <regist>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1896 - Due to other FF/Latch trimming, FF/Latch <cnt_7> has a constant value of 0 in block <regist>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1896 - Due to other FF/Latch trimming, FF/Latch <cnt_8> has a constant value of 0 in block <regist>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1896 - Due to other FF/Latch trimming, FF/Latch <cnt_9> has a constant value of 0 in block <regist>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1896 - Due to other FF/Latch trimming, FF/Latch <cnt_10> has a constant value of 0 in block <regist>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1293 - FF/Latch <cnt_4> has a constant value of 0 in block <regist>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1896 - Due to other FF/Latch trimming, FF/Latch <cnt_5> has a constant value of 0 in block <regist>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1896 - Due to other FF/Latch trimming, FF/Latch <cnt_6> has a constant value of 0 in block <regist>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1896 - Due to other FF/Latch trimming, FF/Latch <cnt_7> has a constant value of 0 in block <regist>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1896 - Due to other FF/Latch trimming, FF/Latch <cnt_8> has a constant value of 0 in block <regist>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1896 - Due to other FF/Latch trimming, FF/Latch <cnt_9> has a constant value of 0 in block <regist>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1896 - Due to other FF/Latch trimming, FF/Latch <cnt_10> has a constant value of 0 in block <regist>. This FF/Latch will be trimmed during the optimization process.

Optimizing unit <driver> ...
WARNING:Xst:1293 - FF/Latch <pos_0> has a constant value of 1 in block <driver>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1896 - Due to other FF/Latch trimming, FF/Latch <pos_1> has a constant value of 1 in block <driver>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1896 - Due to other FF/Latch trimming, FF/Latch <pos1_0> has a constant value of 1 in block <driver>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1896 - Due to other FF/Latch trimming, FF/Latch <pos1_1> has a constant value of 1 in block <driver>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1293 - FF/Latch <temp_2> has a constant value of 0 in block <driver>. This FF/Latch will be trimmed during the optimization process.

Mapping all equations...
Building and optimizing final netlist ...
Found area constraint ratio of 100 (+ 5) on block top, actual ratio is 91.
FlipFlop de/pos1_2 has been replicated 1 time(s)
FlipFlop de/pos1_3 has been replicated 2 time(s)
FlipFlop de/pos1_5 has been replicated 1 time(s)
FlipFlop de/pos_3 has been replicated 1 time(s)
FlipFlop de/pos_4 has been replicated 1 time(s)
FlipFlop de/pos_5 has been replicated 1 time(s)
FlipFlop u2/cnt_1 has been replicated 1 time(s)
FlipFlop u2/cnt_2 has been replicated 1 time(s)
FlipFlop u2/inst_0 has been replicated 1 time(s)
FlipFlop u2/inst_1 has been replicated 1 time(s)
FlipFlop u2/inst_2 has been replicated 1 time(s)
FlipFlop u2/shift_0 has been replicated 1 time(s)

Final Macro Processing ...

=========================================================================
Final Register Report

Macro Statistics
# Registers                                            : 869
 Flip-Flops                                            : 869

=========================================================================

=========================================================================
*                           Partition Report                            *
=========================================================================

Partition Implementation Status
-------------------------------

  No Partitions were found in this design.

-------------------------------

=========================================================================
*                            Final Report                               *
=========================================================================
Final Results
RTL Top Level Output File Name     : top.ngr
Top Level Output File Name         : top
Output Format                      : NGC
Optimization Goal                  : Speed
Keep Hierarchy                     : No

Design Statistics
# IOs                              : 15

Cell Usage :
# BELS                             : 9549
#      GND                         : 1
#      INV                         : 2
#      LUT1                        : 50
#      LUT2                        : 545
#      LUT2_D                      : 16
#      LUT2_L                      : 2
#      LUT3                        : 1945
#      LUT3_D                      : 27
#      LUT3_L                      : 16
#      LUT4                        : 3851
#      LUT4_D                      : 131
#      LUT4_L                      : 84
#      MUXCY                       : 72
#      MUXF5                       : 1799
#      MUXF6                       : 843
#      MUXF7                       : 64
#      MUXF8                       : 32
#      VCC                         : 1
#      XORCY                       : 68
# FlipFlops/Latches                : 869
#      FD                          : 27
#      FDE                         : 841
#      FDRE                        : 1
# Clock Buffers                    : 1
#      BUFGP                       : 1
# IO Buffers                       : 14
#      IBUF                        : 7
#      OBUF                        : 7
=========================================================================

Device utilization summary:
---------------------------

Selected Device : 3s500efg320-4 

 Number of Slices:                     3523  out of   4656    75%  
 Number of Slice Flip Flops:            869  out of   9312     9%  
 Number of 4 input LUTs:               6669  out of   9312    71%  
 Number of IOs:                          15
 Number of bonded IOBs:                  15  out of    232     6%  
 Number of GCLKs:                         1  out of     24     4%  

---------------------------
Partition Resource Summary:
---------------------------

  No Partitions were found in this design.

---------------------------


=========================================================================
TIMING REPORT

NOTE: THESE TIMING NUMBERS ARE ONLY A SYNTHESIS ESTIMATE.
      FOR ACCURATE TIMING INFORMATION PLEASE REFER TO THE TRACE REPORT
      GENERATED AFTER PLACE-and-ROUTE.

Clock Information:
------------------
-----------------------------------+------------------------+-------+
Clock Signal                       | Clock buffer(FF name)  | Load  |
-----------------------------------+------------------------+-------+
clk                                | BUFGP                  | 869   |
-----------------------------------+------------------------+-------+

Asynchronous Control Signals Information:
----------------------------------------
No asynchronous control signals found in this design

Timing Summary:
---------------
Speed Grade: -4

   Minimum period: 9.177ns (Maximum Frequency: 108.968MHz)
   Minimum input arrival time before clock: 7.128ns
   Maximum output required time after clock: 4.394ns
   Maximum combinational path delay: No path found

Timing Detail:
--------------
All values displayed in nanoseconds (ns)

=========================================================================
Timing constraint: Default period analysis for Clock 'clk'
  Clock period: 9.177ns (frequency: 108.968MHz)
  Total number of paths / destination ports: 73300 / 1698
-------------------------------------------------------------------------
Delay:               9.177ns (Levels of Logic = 7)
  Source:            u2/write_add_0 (FF)
  Destination:       u2/regist_31_15 (FF)
  Source Clock:      clk rising
  Destination Clock: clk rising

  Data Path: u2/write_add_0 to u2/regist_31_15
                                Gate     Net
    Cell:in->out      fanout   Delay   Delay  Logical Name (Net Name)
    ----------------------------------------  ------------
     FDE:C->Q              9   0.591   0.995  u2/write_add_0 (u2/write_add_0)
     LUT2_D:I0->O         15   0.704   1.021  u2/regist_13_cmp_eq000011 (u2/N219)
     LUT4:I3->O            1   0.704   0.424  u2/regist_5_cmp_eq00001_1 (u2/regist_5_cmp_eq00001)
     LUT4_D:I3->O         15   0.704   1.021  u2/regist_5_mux0002<0>11 (u2/N51)
     LUT4:I3->O            1   0.704   0.455  u2/regist_5_mux0002<8>1 (u2/regist_5_mux0002<8>)
     LUT3:I2->O            1   0.704   0.000  u2/Mmux_regist_5_mux0000_414 (u2/Mmux_regist_5_mux0000_414)
     MUXF5:I1->O           1   0.321   0.000  u2/Mmux_regist_5_mux0000_3_f5_13 (u2/Mmux_regist_5_mux0000_3_f514)
     MUXF6:I1->O           1   0.521   0.000  u2/Mmux_regist_5_mux0000_2_f6_13 (u2/regist_5_mux0000<8>)
     FDE:D                     0.308          u2/regist_5_8
    ----------------------------------------
    Total                      9.177ns (5.261ns logic, 3.916ns route)
                                       (57.3% logic, 42.7% route)

=========================================================================
Timing constraint: Default OFFSET IN BEFORE for Clock 'clk'
  Total number of paths / destination ports: 80 / 56
-------------------------------------------------------------------------
Offset:              7.128ns (Levels of Logic = 6)
  Source:            z (PAD)
  Destination:       u2/cnt_1 (FF)
  Destination Clock: clk rising

  Data Path: z to u2/cnt_1
                                Gate     Net
    Cell:in->out      fanout   Delay   Delay  Logical Name (Net Name)
    ----------------------------------------  ------------
     IBUF:I->O             9   1.218   0.995  z_IBUF (z_IBUF)
     LUT4_L:I0->LO         1   0.704   0.104  u2/cnt_mux0000<9>48 (u2/cnt_mux0000<9>48)
     LUT4:I3->O            1   0.704   0.455  u2/cnt_mux0000<9>49 (u2/cnt_mux0000<9>49)
     LUT4:I2->O            1   0.704   0.424  u2/cnt_mux0000<9>1111 (u2/cnt_mux0000<9>111)
     LUT4_L:I3->LO         1   0.704   0.104  u2/cnt_mux0000<9>151_SW0 (N1761)
     LUT4:I3->O            2   0.704   0.000  u2/cnt_mux0000<9>151 (u2/cnt_mux0000<9>)
     FDE:D                     0.308          u2/cnt_1
    ----------------------------------------
    Total                      7.128ns (5.046ns logic, 2.082ns route)
                                       (70.8% logic, 29.2% route)

=========================================================================
Timing constraint: Default OFFSET OUT AFTER for Clock 'clk'
  Total number of paths / destination ports: 6 / 6
-------------------------------------------------------------------------
Offset:              4.394ns (Levels of Logic = 1)
  Source:            de/LCD_RS (FF)
  Destination:       LCD_RS (PAD)
  Source Clock:      clk rising

  Data Path: de/LCD_RS to LCD_RS
                                Gate     Net
    Cell:in->out      fanout   Delay   Delay  Logical Name (Net Name)
    ----------------------------------------  ------------
     FDE:C->Q              3   0.591   0.531  de/LCD_RS (de/LCD_RS)
     OBUF:I->O                 3.272          LCD_RS_OBUF (LCD_RS)
    ----------------------------------------
    Total                      4.394ns (3.863ns logic, 0.531ns route)
                                       (87.9% logic, 12.1% route)

=========================================================================


Total REAL time to Xst completion: 83.00 secs
Total CPU time to Xst completion: 82.71 secs
 
--> 


Total memory usage is 665980 kilobytes

Number of errors   :    0 (   0 filtered)
Number of warnings :   27 (   0 filtered)
Number of infos    :   67 (   0 filtered)

